{"version":3,"sources":["webpack:///./src/components/spiral.js","webpack:///./src/components/copyright.js","webpack:///./src/components/hooks/use-site-metadata.js","webpack:///./node_modules/react-transition-group/esm/config.js","webpack:///./node_modules/react-transition-group/esm/TransitionGroupContext.js","webpack:///./node_modules/react-transition-group/esm/Transition.js","webpack:///./src/components/return-to-top.js","webpack:///./src/components/customDesigns.jsx","webpack:///./src/components/layout.js","webpack:///./src/components/header.js","webpack:///./node_modules/core-js/modules/es.math.hypot.js","webpack:///./src/components/hooks/use-scroll-state.js"],"names":["GoldenSpiral","props","spiral_ref","useRef","useState","offsetAngle","setOffsetAngle","stepSize","setStepSize","scale","polarToCartesian","r","angle","Math","cos","sin","useEffect","phi","sqrt","drawSpiral","canvasContext","width","canvas","height","centerPoint","x","y","getSpiralCenter","beginPath","moveTo","maxRadius","rectBounds","maxX","max","abs","left","right","maxY","top","bottom","hypot","getMaxRadius","pow","lineTo","lineWidth","stroke","current","getContext","mediaQueryList","window","matchMedia","devicePixelRatio","updatePixelRatio","ratio","getComputedStyle","getPropertyValue","slice","addEventListener","removeEventListener","style","display","label","onChange","val","Number","target","value","type","min","step","PI","ref","Copyright","useStaticQuery","site","siteMetadata","author","copyright","site_author","name","cur_year","Date","getFullYear","createContext","_React$Component","Transition","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","undefined","mounting","performEnter","performExit","setState","_this2","appearing","_ref2","nodeRef","findDOMNode","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","node","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","children","childProps","createElement","TransitionGroupContext","Provider","cloneElement","Children","only","Component","noop","contextType","defaultProps","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","ReturnToTop","scrolled","useScrollStatus","transitionStyles","entering","opacity","entered","exiting","exited","containerStyles","transition","position","visibility","arrowStyles","transitionState","id","href","className","viewBox","d","myPre","lang","substring","length","toUpperCase","myCode","lines","lineNum","extractNewlines","obj","split","forEach","line","idx","push","search","iter","child","key","shortcodes","Layout","location","title","isRootPath","pathname","data-is-root-path","components","pre","code","Header","data-active","to","$","$hypot","stat","forced","Infinity","NaN","value1","value2","arg","div","sum","i","aLen","arguments","larg","scrollBreakpoint","setScrolled","handleScroll","scrollY","document","passive"],"mappings":"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","file":"a452edb2a18a01ffa3cd67889e3a518e51b650d9-aa0a2bc9aab7ec3d0000.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\"\r\n\r\nconst GoldenSpiral = props => {\r\n    let spiral_ref = useRef()\r\n\r\n    const [offsetAngle, setOffsetAngle] = useState(props.offsetAngle) // Rotation of the spiral\r\n    const [stepSize, setStepSize] = useState(0.05) // Precision of the spiral (how smooth the spiral looks)\r\n    const [scale, setScale] = useState(0.001) //eslint-disable-line\r\n\r\n    function getMaxRadius(centerPoint, rectBounds) {\r\n        // Gets the maximum radius that the circle will be drawn at\r\n        // Get the maximum absolute distance to the edge of the rectangle bounds in the x and y direction from the center point\r\n        let maxX = Math.max(\r\n            Math.abs(rectBounds.left - centerPoint.x),\r\n            Math.abs(rectBounds.right - centerPoint.x))\r\n        let maxY = Math.max(\r\n            Math.abs(rectBounds.top - centerPoint.y),\r\n            Math.abs(rectBounds.bottom - centerPoint.y)\r\n        )\r\n        // Return the hypotenuse of the two distances to get the distance from the center to the corner of the bounds\r\n        return Math.hypot(maxX, maxY)\r\n    }\r\n\r\n    function polarToCartesian(r, angle) {\r\n        // Converts polar coordinates to cartesian coordinates\r\n        let x = r * Math.cos(angle)\r\n        let y = r * Math.sin(angle)\r\n        return [x, y]\r\n    }\r\n\r\n    function getSpiralCenter(width, height) {\r\n        let x = width / 2,\r\n            y = height / 2\r\n        return {x:x, y:y}\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const phi = 0.5 * (1 + Math.sqrt(5)) // Golden number\r\n\r\n\r\n        function drawSpiral(canvasContext) {\r\n            let width = canvasContext.canvas.width\r\n            let height = canvasContext.canvas.height\r\n\r\n            // Move to center of canvas\r\n            let centerPoint = getSpiralCenter(width, height)\r\n            let x = centerPoint.x,\r\n                y = centerPoint.y\r\n            canvasContext.beginPath()\r\n            canvasContext.moveTo(x, y)\r\n\r\n            // While the radius of the spiral is in the bounds of the canvas, iteratively draw lines that represent the spiral\r\n            let canvasBounds = { left: 0, top: 0, right: width, bottom: height }\r\n            let maxRadius = getMaxRadius(centerPoint, canvasBounds)\r\n            let angle = 0\r\n            let r = 0\r\n            while (r < maxRadius) {\r\n                r = scale * Math.pow(phi, angle)\r\n                let [offset_x, offset_y] = polarToCartesian(\r\n                    r,\r\n                    angle + offsetAngle\r\n                )\r\n                x += offset_x\r\n                y += offset_y\r\n                canvasContext.lineTo(x, y)\r\n                angle += stepSize\r\n            }\r\n            canvasContext.lineWidth = 2\r\n            canvasContext.stroke()\r\n        }\r\n\r\n        let canvas = spiral_ref.current\r\n        let canvasContext = canvas.getContext(\"2d\")\r\n\r\n        const mediaQueryList = window.matchMedia(\r\n            `(resolution: ${window.devicePixelRatio}dppx)`\r\n        )\r\n\r\n        const updatePixelRatio = () => {\r\n            let ratio = window.devicePixelRatio\r\n            let width = getComputedStyle(canvas)\r\n                .getPropertyValue(\"width\")\r\n                .slice(0, -2)\r\n            let height = getComputedStyle(canvas)\r\n                .getPropertyValue(\"width\") //FIXME: Make the height of the canvas equal to the width using CSS\r\n                .slice(0, -2)\r\n            canvas.width = width * ratio\r\n            canvas.height = height * ratio\r\n            drawSpiral(canvasContext)\r\n        }\r\n\r\n        updatePixelRatio()\r\n\r\n        mediaQueryList.addEventListener(\"change\", updatePixelRatio)\r\n\r\n        drawSpiral(canvasContext)\r\n\r\n        return () => {\r\n            mediaQueryList.removeEventListener(\"change\", updatePixelRatio)\r\n        }; \r\n    }, [offsetAngle, stepSize, scale]) //Update spiral when any of these values change (prevents redrawing on every frame render)\r\n\r\n    return (\r\n        <div>\r\n            <span style={{ width: \"50%\", display: \"inline-block\" }}>\r\n                Step Size:\r\n                <input\r\n                    label=\"Step Size\"\r\n                    onChange={val => setStepSize(Number(val.target.value))}\r\n                    type=\"range\"\r\n                    min=\"0.01\"\r\n                    max=\"1\"\r\n                    step=\"0.01\"\r\n                    value={stepSize}\r\n                />\r\n            </span>\r\n            <span style={{ width: \"50%\", display: \"inline-block\" }}>\r\n                Offset Angle:\r\n                <input\r\n                    label=\"Offset Angle\"\r\n                    onChange={val => setOffsetAngle(Number(val.target.value))}\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max={2 * Math.PI}\r\n                    step=\"0.05\"\r\n                    value={offsetAngle}\r\n                />\r\n            </span>\r\n            <canvas\r\n                ref={spiral_ref}\r\n                style={{ width: \"100%\", display: \"inline-block\" }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GoldenSpiral\r\n","import React from \"react\"\r\nimport { useSiteMetadata } from \"./hooks/use-site-metadata\"\r\n\r\nexport const Copyright = (props) => {\r\n  const { author, copyright } = useSiteMetadata()\r\n  const site_author = author.name\r\n  let cur_year = new Date().getFullYear()\r\n\r\n  return (\r\n    <div>\r\n      © {copyright}\r\n      {cur_year > copyright ? ` - ` + cur_year : ``}\r\n      {` `}\r\n      {site_author}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Copyright","import { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nexport const useSiteMetadata = () => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query CopyrightQuery {\r\n        site {\r\n          siteMetadata {\r\n            author {\r\n              name\r\n            }\r\n            copyright\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n  return site.siteMetadata\r\n}\r\n","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\n\n// Name the function so it is clearer in the documentation\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import React from \"react\"\r\nimport useScrollStatus from \"./hooks/use-scroll-state\"\r\nimport { Transition } from \"react-transition-group\"\r\n\r\nconst ReturnToTop = props => {\r\n  const scrolled = useScrollStatus(10)\r\n\r\n  const transitionStyles = {\r\n    entering: { opacity: 1 },\r\n    entered: { opacity: 1 },\r\n    exiting: { opacity: 0 },\r\n    exited: { opacity: 0 },\r\n  }\r\n\r\n  const containerStyles = {\r\n    transition: \"all 1s linear\",\r\n    position: \"fixed\",\r\n    bottom: \"1.2rem\",\r\n    right: \"1.2rem\",\r\n    opacity: 0,\r\n    visibility: scrolled ? \"visible\" : \"hidden\",\r\n  }\r\n\r\n  const arrowStyles = {\r\n    width: \"2.5rem\",\r\n    height: \"2.5rem\",\r\n  }\r\n\r\n  return (\r\n    <Transition in={scrolled} timeout={500}>\r\n      {transitionState => (\r\n        <a\r\n          id=\"ReturnTop\"\r\n          href=\"#top-of-page\"\r\n          style={{ ...containerStyles, ...transitionStyles[transitionState] }}\r\n        >\r\n          <span className=\"screen-reader-text\">Return to top of page.</span>\r\n          <svg viewBox=\"0 0 54 54\" style={{ ...arrowStyles }}>\r\n            <g>\r\n              <path\r\n                d=\"M27,0C12.112,0,0,12.112,0,27s12.112,27,27,27s27-12.112,27-27S41.888,0,27,0z M27,52C13.215,52,2,40.785,2,27\r\n\t\tS13.215,2,27,2s25,11.215,25,25S40.785,52,27,52z\"\r\n              />\r\n              <path\r\n                d=\"M28.884,17.355c-0.307-0.53-0.855-0.848-1.469-0.848s-1.162,0.317-1.469,0.848l-8.719,15.102\r\n\t\tc-0.307,0.531-0.306,1.165,0,1.695C17.534,34.684,18.083,35,18.696,35h17.438c0.613,0,1.162-0.316,1.469-0.848\r\n\t\tc0.306-0.53,0.307-1.164,0-1.695L28.884,17.355z M19.224,33l8.191-14.188L35.606,33H19.224z\"\r\n              />\r\n            </g>\r\n          </svg>\r\n        </a>\r\n      )}\r\n    </Transition>\r\n  )\r\n}\r\n\r\nexport default ReturnToTop\r\n","import React from \"react\"\r\n\r\nexport const myPre = (props) => {\r\n    let lang = props.className.substring(\"language-\".length).toUpperCase()\r\n\r\n    return (\r\n        <pre {...props}>\r\n            <div className=\"language\">{lang}</div>\r\n            <hr />\r\n            {props.children}\r\n        </pre>\r\n    )\r\n}\r\n\r\nexport const myCode = (props) => {\r\n    // Empty code block\r\n    if (!props.children) {\r\n        return <code {...props} />\r\n    }\r\n    \r\n    let lines = [[]]\r\n    let lineNum = 0\r\n\r\n    // Extracts the lines from a given jsx element and wraps them in\r\n    // spans with a line class\r\n    let extractNewlines = (obj) => {\r\n        // raw string\r\n        if (typeof obj === \"string\") {\r\n            let splitLines = obj.split(\"\\n\")\r\n            splitLines.forEach((line, idx) => {\r\n                if (idx > 0) {\r\n                    lines.push([])\r\n                    lineNum++\r\n                }\r\n                lines[lineNum].push(line)\r\n            })\r\n            // JSX element that just has a string\r\n        } else if (typeof obj.props?.children === \"string\") {\r\n            if (obj.props.children.search(\"\\n\") >= 0) {\r\n                extractNewlines(obj.props.children)\r\n            } else {\r\n                lines[lineNum].push(obj)\r\n            }\r\n            // obj is array or JSX element with multiple children\r\n        } else {\r\n            // if obj is iterable use it, otherwise use obj children\r\n            let iter = obj.forEach ? obj : obj.props.children\r\n            if(!iter.forEach) {iter=[iter]}\r\n            iter.forEach((child) => {\r\n                extractNewlines(child)\r\n            })\r\n        }\r\n    }\r\n\r\n    extractNewlines(props.children)\r\n\r\n    lines.forEach((line, idx) => {\r\n        lines[idx] = (\r\n            <span className=\"line\" key={idx}>\r\n                {line}\r\n                <br />\r\n            </span>\r\n        )\r\n    })\r\n\r\n    return <code {...props}>{lines}</code>\r\n}\r\n","import React from \"react\"\r\nimport Header from \"./header\"\r\nimport { MDXProvider } from \"@mdx-js/react\"\r\nimport GoldenSpiral from \"./spiral\"\r\nimport Copyright from \"./copyright\"\r\nimport ReturnToTop from \"./return-to-top\"\r\nimport { myPre, myCode } from \"./customDesigns\"\r\n\r\nconst shortcodes = { GoldenSpiral }\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n    const rootPath = `${__PATH_PREFIX__}/`\r\n    const isRootPath = location.pathname === rootPath\r\n\r\n    return (\r\n        <div\r\n            id=\"top-of-page\"\r\n            className=\"global-wrapper\"\r\n            data-is-root-path={isRootPath}\r\n        >\r\n            <Header />\r\n            <main>\r\n                <MDXProvider components={{ pre: myPre, code:myCode, ...shortcodes }}>\r\n                    {children}\r\n                </MDXProvider>\r\n            </main>\r\n            <footer>\r\n                <Copyright />\r\n                <ReturnToTop />\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport useScrollStatus from \"./hooks/use-scroll-state\"\r\n\r\nconst Header = (props) => {\r\n\r\n    const scrolled = useScrollStatus(10)\r\n\r\n    return (\r\n      <header data-active={scrolled}>\r\n        <nav>\r\n          <h1>\r\n            <Link to=\"/\">Bryce Hennen</Link>\r\n          </h1>\r\n        </nav>\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","var $ = require('../internals/export');\n\n// eslint-disable-next-line es/no-math-hypot -- required for testing\nvar $hypot = Math.hypot;\nvar abs = Math.abs;\nvar sqrt = Math.sqrt;\n\n// Chrome 77 bug\n// https://bugs.chromium.org/p/v8/issues/detail?id=9546\nvar BUGGY = !!$hypot && $hypot(Infinity, NaN) !== Infinity;\n\n// `Math.hypot` method\n// https://tc39.es/ecma262/#sec-math.hypot\n$({ target: 'Math', stat: true, forced: BUGGY }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  hypot: function hypot(value1, value2) {\n    var sum = 0;\n    var i = 0;\n    var aLen = arguments.length;\n    var larg = 0;\n    var arg, div;\n    while (i < aLen) {\n      arg = abs(arguments[i++]);\n      if (larg < arg) {\n        div = larg / arg;\n        sum = sum * div * div + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else sum += arg;\n    }\n    return larg === Infinity ? Infinity : larg * sqrt(sum);\n  }\n});\n","import { useState, useEffect } from 'react'\r\n\r\nconst useScrollStatus = scrollBreakpoint => {\r\n  // determined if page has scrolled past a certain point\r\n  const [scrolled, setScrolled] = useState(false)\r\n\r\n  // change state on scroll\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const isScrolled = window.scrollY > scrollBreakpoint\r\n      if (isScrolled !== scrolled) {\r\n        setScrolled(!scrolled)\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"scroll\", handleScroll, { passive: true })\r\n\r\n    return () => {\r\n      // clean up the event handler when the component unmounts\r\n      document.removeEventListener(\"scroll\", handleScroll)\r\n    }\r\n  }, [scrolled, scrollBreakpoint])\r\n\r\n  return scrolled\r\n}\r\n\r\nexport default useScrollStatus\r\n\r\n"],"sourceRoot":""}