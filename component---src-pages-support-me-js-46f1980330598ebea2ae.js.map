{"version":3,"sources":["webpack:///./src/components/payment-form.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./src/pages/support-me.js"],"names":["styles","name","verticalAlign","display","margin","border","fontSize","fontFamily","padding","color","backgroundColor","lineHeight","placeholderColor","_webkitFontSmoothing","_mozOsxFontSmoothing","leftCenter","float","textAlign","blockRight","center","PaymentForm","props","state","cardBrand","nonce","undefined","googlePay","applePay","masterpass","requestCardNonce","bind","self","ReferenceError","this","paymentForm","componentDidMount","config","applicationId","locationId","inputClass","autoBuild","inputStyles","elementId","cardNumber","cvv","placeholder","expirationDate","postalCode","callbacks","methodsSupported","methods","console","log","setState","createPaymentRequest","requestShippingAddress","requestBillingInfo","currencyCode","countryCode","total","label","amount","pending","lineItems","cardNonceResponseReceived","errors","cardData","forEach","error","message","unsupportedBrowserDetected","inputEventReceived","inputEvent","eventType","document","getElementById","innerHTML","style","paymentFormLoaded","build","render","className","id","toUpperCase","type","onClick","Component","pageQuery","SupportPage","data","location","siteTitle","site","siteMetadata","title","useState","squareStatus","setSquareStatus","useEffect","Promise","resolve","reject","sqPaymentScript","createElement","src","crossorigin","onload","onerror","getElementsByTagName","appendChild","then","catch","window","SqPaymentForm"],"mappings":"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","file":"component---src-pages-support-me-js-46f1980330598ebea2ae.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport \"./payment-form.css\"\r\n\r\nconst USE_SANDBOX = true\r\n\r\n\r\nconst styles = {\r\n  name: {\r\n    verticalAlign: \"top\",\r\n    display: \"none\",\r\n    margin: 0,\r\n    border: \"none\",\r\n    fontSize: \"16px\",\r\n    fontFamily: \"Helvetica Neue\",\r\n    padding: \"16px\",\r\n    color: \"#373F4A\",\r\n    backgroundColor: \"transparent\",\r\n    lineHeight: \"1.15em\",\r\n    placeholderColor: \"#000\",\r\n    _webkitFontSmoothing: \"antialiased\",\r\n    _mozOsxFontSmoothing: \"grayscale\",\r\n  },\r\n  leftCenter: {\r\n    float: \"left\",\r\n    textAlign: \"center\",\r\n  },\r\n  blockRight: {\r\n    display: \"block\",\r\n    float: \"right\",\r\n  },\r\n  center: {\r\n    textAlign: \"center\",\r\n  },\r\n}\r\n\r\n// Set the application ID\r\nvar applicationId = \"sandbox-sq0idb-7RUZ2XXFwZoLp_JsTFXY6w\"\r\n\r\n// Set the location ID\r\nvar locationId = \"LTYBG9YYK3DX3\"\r\n\r\n\r\n\r\nexport const loadSquareSdk = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const sqPaymentScript = document.createElement(\"script\")\r\n    sqPaymentScript.src = USE_SANDBOX ? \"https://js.squareupsandbox.com/v2/paymentform\" : \"https://js.squareup.com/v2/paymentform\"\r\n    sqPaymentScript.crossorigin = \"anonymous\"\r\n    sqPaymentScript.onload = () => {\r\n      resolve()\r\n    }\r\n    sqPaymentScript.onerror = () => {\r\n      reject(`Failed to load ${sqPaymentScript.src}`)\r\n    }\r\n    document.getElementsByTagName(\"head\")[0].appendChild(sqPaymentScript)\r\n  })\r\n}\r\n\r\nexport default class PaymentForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      cardBrand: \"\",\r\n      nonce: undefined,\r\n      googlePay: false,\r\n      applePay: false,\r\n      masterpass: false,\r\n    }\r\n    this.requestCardNonce = this.requestCardNonce.bind(this)\r\n  }\r\n\r\n  requestCardNonce() {\r\n    /*\r\n     * function: requestCardNonce\r\n     *\r\n     * requestCardNonce is triggered when the \"Pay with credit card\" button is\r\n     * clicked\r\n     *\r\n     * Modifying this function is not required, but can be customized if you\r\n     * wish to take additional action when the form button is clicked.\r\n     */\r\n    // Request a nonce from the SqPaymentForm object\r\n    this.paymentForm.requestCardNonce()\r\n  }\r\n\r\n  componentDidMount() {\r\n    const config = {\r\n      applicationId: applicationId,\r\n      locationId: locationId,\r\n      inputClass: \"sq-input\",\r\n      autoBuild: false,\r\n      inputStyles: [\r\n        {\r\n          fontSize: \"16px\",\r\n          fontFamily: \"Helvetica Neue\",\r\n          padding: \"16px\",\r\n          color: \"#373F4A\",\r\n          backgroundColor: \"transparent\",\r\n          lineHeight: \"1.15em\",\r\n          placeholderColor: \"#000\",\r\n          _webkitFontSmoothing: \"antialiased\",\r\n          _mozOsxFontSmoothing: \"grayscale\",\r\n        },\r\n      ],\r\n      applePay: {\r\n        elementId: \"sq-apple-pay\",\r\n      },\r\n      masterpass: {\r\n        elementId: \"sq-masterpass\",\r\n      },\r\n      googlePay: {\r\n        elementId: \"sq-google-pay\",\r\n      },\r\n      cardNumber: {\r\n        elementId: \"sq-card-number\"\r\n      },\r\n      cvv: {\r\n        elementId: \"sq-cvv\",\r\n        placeholder: \"CVV\",\r\n      },\r\n      expirationDate: {\r\n        elementId: \"sq-expiration-date\",\r\n        placeholder: \"MM/YY\",\r\n      },\r\n      postalCode: {\r\n        elementId: \"sq-postal-code\",\r\n        placeholder: \"Zip\",\r\n      },\r\n      callbacks: {\r\n        methodsSupported: methods => {\r\n          console.log(methods)\r\n          if (methods.googlePay) {\r\n            this.setState({\r\n              googlePay: methods.googlePay,\r\n            })\r\n          }\r\n          if (methods.applePay) {\r\n            this.setState({\r\n              applePay: methods.applePay,\r\n            })\r\n          }\r\n          if (methods.masterpass) {\r\n            this.setState({\r\n              masterpass: methods.masterpass,\r\n            })\r\n          }\r\n          return\r\n        },\r\n        /*\r\n         * callback function: createPaymentRequest\r\n         * Triggered when: a digital wallet payment button is clicked.\r\n         * Replace the JSON object declaration with a function that creates\r\n         * a JSON object with Digital Wallet payment details\r\n         */\r\n        createPaymentRequest: () => {\r\n          return {\r\n            requestShippingAddress: false,\r\n            requestBillingInfo: true,\r\n            currencyCode: \"USD\",\r\n            countryCode: \"US\",\r\n            total: {\r\n              label: \"MERCHANT NAME\",\r\n              amount: \"100\",\r\n              pending: false,\r\n            },\r\n            lineItems: [\r\n              {\r\n                label: \"Subtotal\",\r\n                amount: \"100\",\r\n                pending: false,\r\n              },\r\n            ],\r\n          }\r\n        },\r\n        /*\r\n         * callback function: cardNonceResponseReceived\r\n         * Triggered when: SqPaymentForm completes a card nonce request\r\n         */\r\n        cardNonceResponseReceived: (errors, nonce, cardData) => {\r\n          if (errors) {\r\n            // Log errors from nonce generation to the JavaScript console\r\n            console.log(\"Encountered errors:\")\r\n            errors.forEach(function (error) {\r\n              console.log(\"  \" + error.message)\r\n            })\r\n            return\r\n          }\r\n          this.setState({\r\n            nonce: nonce,\r\n          })\r\n          console.log(nonce)\r\n        },\r\n        unsupportedBrowserDetected: () => {\r\n          // Handle unsupported browser\r\n        },\r\n        /*\r\n         * callback function: inputEventReceived\r\n         * Triggered when: visitors interact with SqPaymentForm iframe elements.\r\n         */\r\n        inputEventReceived: inputEvent => {\r\n          switch (inputEvent.eventType) {\r\n            case \"focusClassAdded\":\r\n              break\r\n            case \"focusClassRemoved\":\r\n              break\r\n            case \"errorClassAdded\":\r\n              document.getElementById(\"error\").innerHTML =\r\n                \"Please fix card information errors before continuing.\"\r\n              break\r\n            case \"errorClassRemoved\":\r\n              document.getElementById(\"error\").style.display = \"none\"\r\n              break\r\n            case \"cardBrandChanged\":\r\n              if (inputEvent.cardBrand !== \"unknown\") {\r\n                this.setState({\r\n                  cardBrand: inputEvent.cardBrand,\r\n                })\r\n              } else {\r\n                this.setState({\r\n                  cardBrand: \"\",\r\n                })\r\n              }\r\n              break\r\n            case \"postalCodeChanged\":\r\n              break\r\n            default:\r\n              break\r\n          }\r\n        },\r\n        /*\r\n         * callback function: paymentFormLoaded\r\n         * Triggered when: SqPaymentForm is fully loaded\r\n         */\r\n        paymentFormLoaded: function () {\r\n          document.getElementById(\"name\").style.display = \"inline-flex\"\r\n        },\r\n      },\r\n    }\r\n    this.paymentForm = new this.props.paymentForm(config)\r\n    this.paymentForm.build()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div id=\"form-container\">\r\n          <div id=\"sq-walletbox\">\r\n            <button\r\n              style={{ display: this.state.applePay ? \"inherit\" : \"none\" }}\r\n              className=\"wallet-button\"\r\n              id=\"sq-apple-pay\"\r\n            />\r\n            <button\r\n              style={{ display: this.state.masterpass ? \"block\" : \"none\" }}\r\n              className=\"wallet-button\"\r\n              id=\"sq-masterpass\"\r\n            />\r\n            <button\r\n              style={{ display: this.state.googlePay ? \"inherit\" : \"none\" }}\r\n              className=\"wallet-button\"\r\n              id=\"sq-google-pay\"\r\n            />\r\n            <hr />\r\n          </div>\r\n\r\n          <div id=\"sq-ccbox\">\r\n            <p>\r\n              <span style={styles.blockRight}>\r\n                {this.state.cardBrand.toUpperCase()}\r\n              </span>\r\n            </p>\r\n            <div id=\"cc-field-wrapper\">\r\n              <label>\r\n                Card \r\n                <div id=\"sq-card-number\" />\r\n              </label>\r\n              <input type=\"hidden\" id=\"card-nonce\" name=\"nonce\" />\r\n              <label>\r\n                Expiration Date\r\n                <div id=\"sq-expiration-date\" />\r\n              </label>\r\n              <label>\r\n                CVV\r\n                <div id=\"sq-cvv\" />\r\n              </label>\r\n            </div>\r\n            <label>\r\n              Name\r\n              <input\r\n                id=\"name\"\r\n                style={styles.name}\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Postal Code\r\n              <div id=\"sq-postal-code\" />\r\n            </label>\r\n          </div>\r\n          <button\r\n            className=\"button-credit-card\"\r\n            onClick={this.requestCardNonce}\r\n          >\r\n            Pay\r\n          </button>\r\n        </div>\r\n        <p style={styles.center} id=\"error\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport PaymentForm, { loadSquareSdk } from \"../components/payment-form\"\r\n\r\nconst SupportPage = ({ data, location }) => {\r\n    const siteTitle = data.site.siteMetadata?.title || `Title`\r\n    const [squareStatus, setSquareStatus] = useState(null)\r\n    useEffect(() => {\r\n        loadSquareSdk()\r\n            .then(() => {\r\n                setSquareStatus(\"SUCCESS\")\r\n            })\r\n            .catch(() => setSquareStatus(\"ERROR\"))\r\n    }, []) // on mount, add the js script dynamically\r\n    return (\r\n        <Layout location={location} title={siteTitle}>\r\n            <SEO title=\"Home\" />\r\n            {squareStatus === \"ERROR\" &&\r\n                \"Failed to load SquareSDK. Please refresh the page.\"}\r\n            {squareStatus === \"SUCCESS\" && (\r\n                <PaymentForm paymentForm={window.SqPaymentForm} />\r\n            )}\r\n        </Layout>\r\n    )\r\n}\r\nexport default SupportPage\r\n\r\n// ## Donation Options\r\n\r\n// There are many different ways you can contribute, and I appreciate _any_ contribution deeply. Thank you for your support!\r\n\r\n// <!-- TODO: Make a javascript app that lets users pick multiple ways to contribute in a cool way -->\r\n// `checkbox` I would like to contribute $`slider` per month.\r\n// I would like to contribute `slider` dollars for each MAJOR piece of work you do.\r\n// <!-- - I would like to convert X dollars into _brycoins_ and tip you for each work I find valueable. I can redeem  -->\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n}\r\n`"],"sourceRoot":""}